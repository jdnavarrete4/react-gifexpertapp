{"version":3,"sources":["Componentes/AddCategory.js","getGifs.js","Componentes/GifGridItem.js","Componentes/GifGrif.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputvalue","setInputJose","buscar","e","target","value","onSubmit","preventDefault","trim","length","cats","type","onChange","onClick","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrif","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+MAGcA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAIvCC,EAAQ,SAACC,GACfF,EAAaE,EAAEC,OAAOC,QAerB,OACI,0BAAMC,SAZS,SAACH,GAClBA,EAAEI,iBACLP,EAAWQ,OAAOC,OAAQ,IAE1BX,GAAc,SAAAY,GAAI,OAAIV,GAAJ,mBAAkBU,OACpCT,EAAa,OASJ,2BAEAU,KAAM,OACLN,MAAQL,EACTY,SAAYV,EACZW,QAAUX,M,uBC/BVY,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0DAE8CC,UAAUH,GAFxD,sDAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EAEzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,yBAAKc,UAAW,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECEX,SAACA,GAAa,IAAD,EAEXhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAyBrC,OAlBAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GAEAH,EAAS,CACHf,KAAMkB,EACNL,SAAQ,SAQrB,CAACpB,IAGGqB,EDzBmBK,CAAa1B,GAA/Ba,EAF2B,EAEhCN,KAAYa,EAFoB,EAEpBA,QAKf,OACI,oCACA,wBAAIJ,UAAW,qCAAf,IAAqDhB,GACpDoB,EAAU,cAAe,GAE1B,yBAAKJ,UAAW,aAEJH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAiB,IAAOjB,EAAIC,IACPD,UEhBfkB,EAAe,WAAO,IAAD,EAIK5C,mBAAS,CAAC,UAJf,mBAIxB6C,EAJwB,KAIZ9C,EAJY,KAM9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAIJ,4BAGI8C,EAAWpB,KAAK,SAAAT,GAAQ,OACxB,kBAAC,EAAD,CACG2B,IAAK3B,EACLA,SAAYA,UCnB3B8B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.da583699.chunk.js","sourcesContent":[" import React, { useState } from 'react'\r\n import Proptypes from 'prop-types'\r\n \r\n export const AddCategory = ({setcategories}) => {\r\n\r\n    const [inputvalue, setInputJose] = useState('');\r\n    \r\n    const buscar =(e) =>{\r\n    setInputJose(e.target.value);\r\n\r\n    }\r\n\r\n   const handleSubmit = (e) =>{\r\n       e.preventDefault ();\r\nif (inputvalue.trim().length >1){\r\n\r\n    setcategories(cats=> [inputvalue,...cats]);\r\n    setInputJose('');\r\n\r\n}\r\n\r\n   }\r\n\r\n     return (\r\n         <form onSubmit ={ handleSubmit}>\r\n            \r\n             <input\r\n             \r\n             type= \"text\"\r\n              value= {inputvalue}\r\n             onChange={  buscar}\r\n             onClick={ buscar}\r\n             />\r\n             \r\n                      </form>\r\n     )\r\n }\r\n \r\n AddCategory.propTypes = {\r\n     setcategories: Proptypes.func.isRequired\r\n }","export const getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${( encodeURI(category)) }&api_key=EPnqT6pzPbVO4WLKOq90tJDa79IZvZhq`;\r\n    const resp =await fetch(url);\r\n    const {data}  = await resp.json();\r\n    const gifs = data.map( img =>{\r\n\r\n        return { \r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n    return gifs;\r\n}\r\n    \r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    \r\n    return (\r\n        <div className= \"card animate__animated animate__jello \">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrif = ({category}) => {\r\n\r\nconst {data:images,loading} = useFetchGifs(category);\r\n\r\n    // getGifs();\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className= \"animate__animated animate__bounce\"> {category}</h3>\r\n        {loading ? 'Cargando...': ''}\r\n        \r\n        <div className= \"card-grid\">\r\n                            {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {...img}/>\r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../getGifs\"\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n   \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n        .then(imgs=>{\r\n\r\n              setstate({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n\r\n\r\n           \r\n        })\r\n\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}","import React from 'react'\r\nimport  {useState}  from 'react'\r\nimport { AddCategory } from './Componentes/AddCategory';\r\nimport { GifGrif } from './Componentes/GifGrif';\r\n\r\nexport const GifExpertApp = () => {\r\n   \r\n   \r\n\r\n   const [categories, setcategories] = useState(['Rocky']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategories= {setcategories}  />\r\n            <hr />\r\n\r\n          \r\n\r\n        <ol>\r\n\r\n        {\r\n            categories.map( category => (\r\n            <GifGrif \r\n               key={category} \r\n               category = {category}/>\r\n            ))\r\n        }\r\n\r\n        </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}